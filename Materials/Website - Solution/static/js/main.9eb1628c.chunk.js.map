{"version":3,"sources":["components/common/Navigation.js","components/books/Book.js","components/forms/RenderField.js","components/forms/RenderInput.js","components/common/DropWrapper.js","components/forms/BookForm.js","api/index.js","containers/BookFormContainer.js","actions/index.js","actions/actionTypes.js","components/books/BookList.js","containers/BookListContainer.js","components/about/About.js","components/reviews/Review.js","components/forms/RenderTextArea.js","components/forms/ReviewForm.js","containers/ReviewFormContainer.js","components/reviews/ReviewList.js","containers/ReviewListContainer.js","App.js","registerServiceWorker.js","store/reviewsReducer.js","store/booksReducer.js","store/reducers.js","index.js","store/configureStore.js"],"names":["Navigation","react_default","a","createElement","className","Link","to","Book","nextProps","this","props","bookId","_this$props","title","author","cover","concat","src","alt","React","Component","defaultProps","RenderField","_ref","input","label","controlId","type","children","_ref$meta","meta","touched","error","invalid","htmlFor","RenderInput","forms_RenderField","Object","assign","id","placeholder","allow","e","stopPropagation","preventDefault","DropWrapper","dropped","target","prop","onDragOver","onDragEnter","onDrop","handleDrop","handleImageChosen","newHeight","newWidth","files","dataTransfer","length","f","reader","FileReader","onload","e2","image","Image","height","width","oldWidth","canvas","document","ctx","getContext","drawImage","change","toDataURL","result","readAsDataURL","required","value","errors","trim","size","min","max","reduxForm","form","validate","values","handleSubmit","onSubmit","Field","component","name","common_DropWrapper","url","process","headers","accept","content-type","book","mapDispatchToProps","dispatch","fetch","method","mode","body","JSON","stringify","then","response","json","api","reset","BookFormContainer","connect","state","ownProps","selector","formValueSelector","initialValues","BookForm","BookList","receiveBooks","books","containers_BookFormContainer","map","item","i","books_Book","undefined","key","BookListContainer","About","Review","review","RenderTextArea","rows","cols","content","data","ReviewFormContainer","reviewForm","ReviewList","receiveReviews","match","params","reviews","containers_ReviewFormContainer","reviews_Review","ReviewListContainer","App","store","es","BrowserRouter","common_Navigation","Route","exact","path","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","bookStore","combineReducers","arguments","action","toConsumableArray","reducer","middlewares","ReduxThunk","createStore","applyMiddleware","apply","configureStore","ReactDOM","render","src_App_0","getElementById","URL","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9eb1628c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = () => (\r\n\t<div className=\"row navbar navbar-default\">\r\n\t\t <Link className=\"navbar-brand\" to=\"/\">Book Reactions</Link>\r\n\t\t <ul className=\"nav navbar-nav\">\r\n\t\t\t<li><Link to=\"/\">Home</Link></li>\r\n\t\t\t<li><Link to=\"/about\">About</Link></li>\r\n\t\t</ul>\r\n\t</div>\r\n);\r\n\r\nexport default Navigation;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Book extends React.Component {\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n\t\treturn (this.props.bookId !== nextProps.bookId);\r\n    }\r\n    \r\n    render() {\r\n        const { title, bookId, author, cover } = this.props;\r\n        return (<tr>\r\n            <td>\r\n            <Link to={`/reviews/${bookId}/${title}`}>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</Link>\r\n            </td>\r\n            <td>{author}</td>\r\n\t\t\t<td><img src={cover} alt={title} /></td>\r\n        </tr>);\r\n    }\r\n}\r\n\r\nBook.defaultProps = {\r\n\ttitle: 'unknown',\r\n    author: 'unknown',\r\n    cover: '/NoImage.png'\r\n};\r\n\r\n\r\nBook.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\tauthor: PropTypes.string.isRequired,\r\n\tcover: PropTypes.string.isRequired,\r\n\tbookId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Book;\r\n","import React from 'react';\r\n\r\nconst RenderField = ({ input, label, type, controlId, children, meta: { touched, error, invalid }  }) => (\r\n    <div className={`form-group ${touched && invalid ? 'has-error' : ''}`}>\r\n        <div className=\"form-inline\">\r\n            <label htmlFor={controlId} className=\"control-label\">{label}: &nbsp;</label>\r\n           {children}\r\n        </div>\r\n        <div className=\"help-block\">\r\n            {touched && error && <span>{error}</span>}\r\n        </div>\r\n    </div>);\r\n\r\nexport default RenderField;","import React from 'react';\r\nimport RenderField from './RenderField'\r\n\r\nconst RenderInput = ({ input, label, type, controlId, meta }) => (\r\n    <RenderField label={label} meta={meta}>\r\n        <input {...input}  id={controlId} type={type}\r\n        className=\"form-control\" placeholder={label} />\r\n    </RenderField>\r\n);\r\n\r\nexport default RenderInput;","import React from 'react';\r\n\r\nconst allow = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n}\r\n\r\nconst handleDrop = (e, dropped, target, prop) => {\r\n    allow(e);\r\n    dropped(e, target, prop);\r\n}\r\n\r\nconst DropWrapper = ({dropped, target, prop, children}) => (<div className=\"dropTarget\" \r\n    onDragOver={(e) => { allow(e) } }\r\n    onDragEnter={(e) => { allow(e) } }\r\n    onDrop={(e) => { handleDrop(e, dropped, target, prop) } }>\r\n    {children}\r\n</div>);\r\n\r\nexport default DropWrapper;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport RenderInput from './RenderInput';\r\nimport DropWrapper from '../common/DropWrapper';\r\n\r\nconst handleImageChosen = (e, target, prop) => {\r\n\tlet size = 160;\r\n\tlet newHeight;\r\n\tlet newWidth;\r\n\tlet files = e.target.files || e.dataTransfer.files;\r\n\tif (files && files.length > 0) {\r\n\t\tlet f = files[0];\r\n\t\tlet reader = new FileReader();\r\n\t\treader.onload = (function (theFile) {\r\n\t\t\treturn function (e2) {\r\n\t\t\t\tlet image = new Image();\r\n\t\t\t\timage.onload = function () {\r\n\t\t\t\t\tnewHeight = this.height;\r\n\t\t\t\t\tnewWidth = this.width;\r\n\t\t\t\t\tif (this.height > size) {\r\n\t\t\t\t\t\tnewHeight = size;\r\n\t\t\t\t\t\tnewWidth = (newHeight * this.width) / this.height;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (newWidth > size) {\r\n\t\t\t\t\t\tlet oldWidth = newWidth;\r\n\t\t\t\t\t\tnewWidth = size;\r\n\t\t\t\t\t\tnewHeight = (newWidth * newHeight) / oldWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\t\t\t\tlet ctx = canvas.getContext(\"2d\");\r\n\t\t\t\t\tcanvas.width = newWidth;\r\n\t\t\t\t\tcanvas.height = newHeight;\r\n\t\t\t\t\tctx.drawImage(image, 0, 0, newWidth, newHeight);\r\n                    //your code here\r\n\t\t\t\t\ttarget.change(prop, canvas.toDataURL(f.type));\r\n\r\n\t\t\t\t};\r\n\t\t\t\timage.src = e2.target.result;\r\n\t\t\t};\r\n\t\t})(f);\r\n\t\treader.readAsDataURL(f);\r\n\t}\r\n}\r\n\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n    if(required(values.title, errors, 'title')) {\r\n        size(values.title, errors, 'title', 3, 256);\r\n    }\r\n    if (required(values.author, errors, 'author')) {\r\n        size(values.author, errors, 'author', 4, 100);  \r\n    }\r\n    return errors;\r\n}\r\n\r\nconst required = (value, errors, prop) => {\r\n    if (!value || value.trim() === '') {\r\n        errors[prop] = 'Cannot be empty';\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nconst size = (value, errors, prop, min, max) => {\r\n    if (value.length > max || value.length < min) {\r\n        errors[prop] = `must be between ${min} and ${max} characters`;\r\n    }\r\n}\r\n\r\nconst BookForm = props => {\r\n    const { handleSubmit, cover } = props;\r\n\r\n    return (<form className=\"form-group form-inline\" onSubmit={handleSubmit}>\r\n        <div className=\"row vertical-align\">\r\n            <div className=\"col-xs-3\">\r\n                <Field\r\n                    component={RenderInput}\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    controlId=\"title\"\r\n                    label=\"Title*\" />\r\n            </div>\r\n            <div className=\"col-xs-3\">\r\n                <Field\r\n                    component={RenderInput}\r\n                    name=\"author\"\r\n                    type=\"text\"\r\n                    controlId=\"author\"\r\n                    label=\"Author*\" />\r\n            </div>\r\n            <div className=\"col-xs-3\">\r\n                <DropWrapper dropped={handleImageChosen} target={props} prop=\"cover\">\r\n                    <img src={cover}  alt=\"\" />\r\n                </DropWrapper>\r\n            </div>            \r\n            <button type=\"submit\" className=\"btn btn-default btn-primary\" >Submit</button>\r\n        </div>\r\n    </form>);\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'book',\r\n    validate\r\n})(BookForm);","import fetch from \"isomorphic-fetch\";\r\n\r\nconst url = process.env.REACT_APP_URL;\r\n\r\nconst headers = {\r\n    accept: 'application/json',\r\n    'content-type': 'application/json'\r\n};\r\n\r\n\r\nexport const fetchAllBooks = () => {\r\n    return fetch(url + 'Books').then((response) => {\r\n        return response.json();\r\n    });\r\n}\r\n\r\nexport const addBook = (book) => {\r\n    return fetch(url + 'Books', {\r\n        method: 'post',\r\n        mode: 'cors',\r\n        headers: headers,\r\n        body: JSON.stringify(book)\r\n    }).then(function (response) {\r\n        return response.json();\r\n    });\r\n}\r\n\r\nexport const fetchReviews = (bookId) => {\r\n    return fetch(url + \"Reviews/\" + bookId)\r\n        .then(function (response) {\r\n            return response.json();\r\n        });\r\n}\r\n\r\nexport const addReview = (review) => {\r\n    return fetch(url + \"Reviews\", {\r\n        method: 'post',\r\n        mode: 'cors',\r\n        headers: headers,\r\n        body: JSON.stringify(review)\r\n    })\r\n        .then(function (response) {\r\n            return response.json();\r\n        });\r\n}\r\n","import { connect } from 'react-redux';\r\nimport BookForm from '../components/forms/BookForm';\r\nimport { addBook } from '../actions';\r\nimport {formValueSelector} from  'redux-form';\r\n\r\nconst book = {\r\n    author: '',\r\n    cover: '',\r\n    title: '',\r\n    bookId: -1\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const selector = formValueSelector('book')\r\n    return {\r\n        initialValues: book,\r\n        cover: selector(state, 'cover')\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = ({\r\n    onSubmit: addBook\r\n});\r\n\r\nconst BookFormContainer = connect(mapStateToProps, mapDispatchToProps)(BookForm);\r\n\r\nexport default BookFormContainer;","import * as api from '../api';\r\nimport * as actionTypes from './actionTypes';\r\nimport {reset} from 'redux-form';\r\n\r\nexport const receiveReviews = (bookId) => (dispatch) => {\r\n    return api.fetchReviews(bookId).then((response) => {\r\n        dispatch({\r\n            type: actionTypes.LIST_REVIEWS,\r\n            response\r\n        });\r\n    })\r\n}\r\n\r\n\r\nexport const addReview = (review) => (dispatch) => {\r\n    api.addReview(review).then((response) => {\r\n        dispatch({\r\n            type: actionTypes.ADD_REVIEW,\r\n            review: response\r\n        });\r\n        dispatch(reset('review'));\r\n    });\r\n}\r\n\r\nexport const receiveBooks = () => (dispatch) => {\r\n    return api.fetchAllBooks().then((response) => {\r\n        dispatch({\r\n            type: actionTypes.LIST_BOOKS,\r\n            response\r\n        });\r\n    })\r\n}\r\n\r\nexport const addBook = (book) => (dispatch) => {\r\n    api.addBook(book).then((response) => {\r\n        dispatch({\r\n            type: actionTypes.ADD_BOOK,\r\n            book: response\r\n        });\r\n        dispatch(reset('book'));\r\n    });\r\n}\r\n\r\n","export const LIST_REVIEWS = \"LIST_REVIEWS\";\r\nexport const LIST_BOOKS = \"LIST_BOOKS\";\r\nexport const ADD_BOOK = \"ADD_BOOK\";\r\nexport const ADD_REVIEW = \"ADD_REVIEW\";","import React from 'react';\r\nimport Book from './Book';\r\nimport BookFormContainer from '../../containers/BookFormContainer';\r\n\r\nclass BookList extends React.Component {\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.props.receiveBooks();\r\n\t}\r\n\r\n    render() {\r\n        const { books } = this.props;\r\n        return (<div className=\"table-responsive\">\r\n            <BookFormContainer />\r\n            <table className=\"table table-bordered table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Book</th>\r\n                        <th>Author</th>\r\n                        <th>Cover</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {books.map(function (item, i) {\r\n                        return <Book author={item.author} bookId={item.bookId}\r\n                        title={item.title} cover={item.cover || undefined}  key={i} />;\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default BookList;\r\n\r\n\r\n\r\n\r\n","import {connect} from 'react-redux';\r\nimport BookList from '../components/books/BookList';\r\nimport { receiveBooks } from '../actions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    books : state.books\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    receiveBooks\r\n};\r\n\r\nconst BookListContainer = connect(mapStateToProps, mapDispatchToProps)(BookList);\r\n\r\nexport default BookListContainer;","import React from 'react';\r\n\r\nconst About = () => (\r\n    <div className=\"row\">\r\n        <h1>Book Reactions</h1>\r\n        <h2>Where you react to books</h2>\r\n    </div>\r\n)\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Review = (props) => (<tr>\r\n\t<td >{props.review}</td>\r\n</tr>);\r\n\r\nReview.propTypes = { review: PropTypes.string.isRequired };\r\n\r\nexport default Review;\r\n\r\n","import React from 'react';\r\nimport RenderField from './RenderField'\r\n\r\nconst RenderTextArea = ({ input, label, controlId, meta }) => (\r\n    <RenderField label={label} meta={meta} controlId={controlId}>\r\n        <textarea {...input} rows=\"3\" cols=\"90\" id={controlId}\r\n        className=\"form-control\" placeholder={label} ></textarea>\r\n    </RenderField>\r\n);\r\n\r\nexport default RenderTextArea;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport RenderTextArea from './RenderTextArea';\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n\r\n    if (!values.content || values.content.trim() === '') {\r\n        errors.content = 'Enter a review';\r\n    }\r\n    else if (values.content.length > 256 || values.content.length < 3) {\r\n        errors.content = 'Review must be between 3 and 256 characters';\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nconst reviewForm = props => {\r\n    const { handleSubmit } = props;\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className=\"row vertical-align\">\r\n            <div className=\"col-xs-8\">\r\n                <Field\r\n                    name=\"content\"\r\n                    controlId=\"content\"\r\n                    type=\"text*\"\r\n                    component={RenderTextArea}\r\n                    label=\"Review*\" />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-default btn-primary\" >Submit</button>\r\n        </div>\r\n    </form>;\r\n\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'review',\r\n    validate\r\n})(reviewForm);\r\n","import { connect } from 'react-redux';\r\nimport reviewForm from '../components/forms/ReviewForm';\r\nimport { addReview } from '../actions';\r\n\r\nconst data = {\r\n    content: ''\r\n}\r\n\r\nfunction getData(id) {\r\n    data.bookId = id;\r\n    return data;\r\n}\r\n\r\nconst mapDispatchToProps = ({\r\n    onSubmit: addReview\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        initialValues: getData(ownProps.id)\r\n    }\r\n};\r\n\r\n\r\nconst ReviewFormContainer = connect(mapStateToProps, mapDispatchToProps)(reviewForm);\r\n\r\n\r\nexport default ReviewFormContainer;","import React from 'react';\r\nimport Review from \"./Review\";\r\nimport ReviewFormContainer from '../../containers/ReviewFormContainer';\r\n\r\nclass ReviewList extends React.Component {\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.props.receiveReviews(this.props.match.params.id);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { reviews, match: { params: { title} } } = this.props;\r\n\t\treturn (<div className=\"row\">\r\n\t\t\t<h2>Reviews of {title}:</h2>\r\n\t\t\t<ReviewFormContainer id={this.props.match.params.id} />\r\n\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t<table className=\"table table-bordered table-striped\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Review</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{reviews.map(function (item, i) {\r\n\t\t\t\t\t\t\treturn <Review review={item.content} key={i} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</div>);\r\n\t}\r\n}\r\n\r\nexport default ReviewList; \r\n","import {connect} from 'react-redux';\r\nimport ReviewList from '../components/reviews/ReviewList';\r\nimport { receiveReviews } from '../actions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    reviews : state.reviews\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    receiveReviews\r\n};\r\n\r\nconst ReviewListContainer = connect(mapStateToProps, mapDispatchToProps)(ReviewList);\r\n\r\nexport default ReviewListContainer;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Navigation from './components/common/Navigation';\nimport BookListContainer from './containers/BookListContainer';\nimport About from './components/about/About';\nimport ReviewListContainer from './containers/ReviewListContainer';\nimport './App.css';\n\nconst App = ({ store }) => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <div className=\"container-fluid\">\n        <Navigation />\n        <div className=\"container\">\n          <Route exact path=\"/\" component={BookListContainer} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/reviews/:id/:title\" component={ReviewListContainer} />\n        </div>\n      </div>\n    </BrowserRouter>\n  </Provider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { LIST_REVIEWS, ADD_REVIEW } from '../actions/actionTypes';\r\n\r\nconst reviews = [{\r\n    content: \"\"\r\n}];\r\n\r\nexport const reviewsReducer = (state = reviews, action) => {\r\n    switch (action.type) { \r\n        case ADD_REVIEW:\r\n        return [\r\n            action.review, ...state\r\n        ];\r\n        case LIST_REVIEWS:\r\n            return action.response;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { LIST_BOOKS, ADD_BOOK } from '../actions/actionTypes';\r\n\r\nconst books = [{ author: '', title: '', bookId: -1, cover: '' }];\r\n\r\nexport const booksReducer = (state = books, action) => {\r\n    switch (action.type) {    \r\n        case ADD_BOOK:\r\n            return [\r\n                action.book, ...state\r\n            ];\r\n        case LIST_BOOKS:\r\n            return action.response;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport {reviewsReducer as reviews} from './reviewsReducer';\r\nimport {booksReducer as books} from './booksReducer';\r\nimport { reducer  } from 'redux-form';\r\n\r\nconst bookStore = combineReducers({\r\n    books,\r\n    reviews,\r\n    form: reducer\r\n});\r\n\r\nexport default bookStore;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\nReactDOM.render(<App store={store} />, document.getElementById('root'));\nregisterServiceWorker();\n","import { createStore, applyMiddleware } from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport bookStore from './reducers';\r\n\r\nconst configureStore = () => {\r\n    const middlewares = [ReduxThunk];\r\n    let store = createStore(bookStore, applyMiddleware(...middlewares));\r\n    return store;\r\n}\r\n\r\nexport default configureStore;"],"sourceRoot":""}